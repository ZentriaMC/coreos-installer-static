#!/usr/bin/env bash
set -euo pipefail

{
    base_url="https://github.com/ZentriaMC/coreos-installer-static"
    version="{{ version }}"

    gzip=""
    if command -v pigz &>/dev/null; then
        gzip="pigz"
    elif command -v gzip &>/dev/null; then
        gzip="gzip"
    fi

    asset_name=""
    sha256=""

    os_arch="$(uname -m)-$(uname -s)"
    os_arch="${os_arch,,}" # lowercase
    case "${os_arch}" in
{{#each assets}}
        {{ os }})
            asset_name="{{ name }}"
            sha256="{{ sha256 }}"
            ;;
{{/each}}
        *)
            echo >&2 "Unsupported OS & arch combination: ${os_arch}"
            exit 1
            ;;
    esac


    download_url="${base_url}/releases/download/${version}/${asset_name}"
    if [ -n "${gzip}" ]; then
        download_url="${download_url}.gz"
    fi
    tmpdir_name="coreos-installer-${os_arch}-${version}"

    download_path="${TMPDIR:-/tmp}/${tmpdir_name}"
    target_path="${download_path}/${asset_name}"

    if ! [ -x "${target_path}" ]; then
        target_path_tmp="${download_path}/.${asset_name}.${RANDOM}"
        mkdir -p "${download_path}"

        if [ -n "${gzip}" ]; then
            curl --fail -L -o "${target_path_tmp}.gz" "${download_url}"
            "${gzip}" -d < "${target_path_tmp}.gz" > "${target_path_tmp}"
            rm "${target_path_tmp}.gz"
        else
            curl --fail -L -o "${target_path_tmp}" "${download_url}"
        fi
        chmod +x "${target_path_tmp}"

        if ! (sha256sum "${target_path_tmp}" | grep -q -F "${sha256}"); then
            echo >&2 "sha256 verification failed"
            exit 1
        fi

        mv "${target_path_tmp}" "${target_path}"
    fi

    exec "${target_path}" "${@}"
}

# vim: et:sw=4:sts=4
